{"version":3,"sources":["common/styled.ts","types/data.ts","hooks/useStateSelection.ts","utils/utils.ts","hooks/useDataBounds.ts","components/Header/Logo/Logo.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","utils/debounce.ts","components/Controls/ControlledDropdown/ControlledDropdown.tsx","components/Controls/ControlledSlider/ControlledSlider.tsx","components/Controls/RendererControls/RendererControls.tsx","components/Controls/Controls.tsx","utils/SizedToParent.tsx","utils/useDimensions.ts","components/Chart/constants/index.ts","components/Chart/hooks/color.ts","components/Chart/Pixi/utils/utils.ts","components/Chart/Pixi/utils/TooltipManager.ts","components/Chart/Pixi/utils/ScalesManager.ts","components/Chart/Pixi/PixiRenderer.ts","components/Chart/hooks/useCallbackRef.ts","components/Chart/hooks/useResizeHandling.ts","components/Chart/hooks/axis.ts","components/Chart/Pixi/BeeSwarmSVG.tsx","components/Chart/Pixi/PixiBeeSwarm.tsx","components/Chart/Pixi/hooks/useUpdatedData.ts","components/Chart/Pixi/hooks/usePixiInstance.ts","components/Chart/SVG/hooks/events.ts","components/Chart/SVG/hooks/useTooltipPositioner.ts","components/Chart/SVG/hooks/draw.ts","components/Chart/hooks/useSelectionOnNode.ts","components/Chart/SVG/BeeSwarmSVG.tsx","components/Chart/SVG/SVGChartContainer.tsx","components/Chart/ChartContainer.tsx","components/Chart/hooks/range.ts","components/Chart/hooks/useViewportDimensions.ts","components/Chart/hooks/scales.ts","components/VisualizePage/VisualizePage.tsx","hooks/UseRendererSelection.ts","components/IndexPage/IndexPage.tsx","hooks/useDogData.ts","common/theme.ts","components/App/App.tsx","index.tsx"],"names":["FilterOptions","Flexy","styled","div","Col","Page","FilterYOptions","DropdownXOptions","key","age","text","posted","DogAge","DogCoat","DogGender","DogSize","DropdownYOptions","coat","gender","size","CoatYRange","Curly","Long","Medium","Short","Wire","Hairless","Unknown","GenderYRange","Male","Female","SizeYRange","Small","Large","ExtraLarge","defaultXOption","defaultYOption","generateRandomNumber","min","max","Math","random","Date","generateRandomAge","ageLabel","Senior","Adult","Young","Baby","handleComparison","item","xFilter","localMax","comparison","handleMinComparison","localMin","getTooltipHtml","data","name","toUpperCase","process","imgSrc","round","toDateString","adoptable","state","useDataBounds","useState","selectedMax","setSelectedMax","maxX","setMaxX","minX","setMinX","chartData","setchartData","sliderSettings","useMemo","length","getChartData","useCallback","newMax","upperbound","dataRef","dataContainer","maxXComputed","minXComputed","i","selectedItem","newMin","push","getSlicedData","cData","maxComputed","minComputed","useEffect","onSliderChange","value","Logo","memo","Container","LogoText","src","alt","img","Header","HeaderStyles","Footer","href","title","debounce","callback","timer","delay","args","clearTimeout","that","this","setTimeout","call","dropdownStyles","dropdown","width","root","display","fontFamily","fontSize","label","dropdownOptionText","ControlledDropdown","selectedOption","onDropDrownChange","options","Spacer","Dropdown","onChange","selectedKey","styles","Renderers","sliderStyles","slideBox","titleLabel","ControlledSlider","sliderOnChange","sliderValue","Slider","step","showValue","snapToStep","RendererOptions","SVG","imageSrc","selectedImageSrc","imageSize","height","Canvas","WebGL","RendererControls","selectedRender","ChoiceGroup","Controls","xAxisFilter","yAxisFilter","onXDropDrownChange","onYDropDrownChange","onRendererChange","ControlStyles","DEFAULT_STYLE","position","left","right","top","bottom","overflow","SizedToParent","sizedRef","onResize","children","className","style","defaultRef","useRef","ref","dims","dimensions","setDimensions","current","rect","getBoundingClientRect","floor","observer","ResizeObserver","entries","entry","newDims","contentRect","observe","disconnect","useDimensions","finalStyle","displayName","correctedMargins","colors","useColorizer","yRange","idNumberMap","reduce","idMap","idx","id","circle","spriteCoordinates","radius","x","y","alpha","tint","hex","parseColor","attrs","sprite","a","Object","keys","forEach","color","clean","replace","parseInt","TooltipManager","toolTipElement","element","postion","xPos","yPos","visibility","coords","tooltip","padding","innerHTML","backgroundColor","border","updateTooltipPositioner","ScalesManager","filters","scales","d","xScale","yScale","colorScale","bandwidth","undefined","node","PixiRenderer","containerEl","renderer","pixiElement","circleTexture","nodesStage","stage","spriteKeys","Set","tweenedScale","ToolTipManagerInstance","rendererType","ScalesManagerInstance","spriteMap","resize","setRenderer","circleTemplate","PIXI","beginFill","lineStyle","drawCircle","endFill","generateTexture","NEAREST","appendChild","view","addChild","transform","pixiRender","antialias","transparent","forceCanvas","type","CANVAS","console","log","setScales","setFilters","setTooltipElement","updateTransition","destroy","removeChild","posAttrs","getXYPosition","petId","_data","interactive","interactiveChildren","on","ev","handleMouseover","handleMouseout","add","renderPixi","nodeId","stopPropagation","showToolTip","hideTooltip","defaultColor","currentData","start","startScale","requestAnimationFrame","tweenRender","now","deltaTime","percent","eased","easeCubic","finalScale","spriteQueue","nodesToAdd","currNode","spriteKey","currNodePos","prevNode","delete","visible","enter","render","useCallbackRef","setElement","useResizeHandling","select","attr","useXAxisTheming","axisBottom","selectAll","useYAxisTheming","axisLeft","BeeSwarmSVG","vpHeight","vpWidth","setSvgEl","svgElementRef","setXAxisElement","xAxisElement","setYAxisElement","yAxisElement","zIndex","PixiBeeSwarm","setCanvasElement","canvasElement","pixiInstance","getRendererType","updateChart","useUpdatedData","containerElement","setPixiInstance","setUpPixi","instance","PIXIinstance","remove","usePixiInstance","ChartStyle","PixiElement","ToolTip","useHoverEvents","t","transition","duration","useCircleDrawing","elementSelection","useSelectionOnNode","onCircleMouseover","onCircleMouseout","getXValue","getYValue","getColor","useLayoutEffect","join","append","e","interrupt","update","exit","defaultRadius","BeeSwarmContainer","setBeeSwarmContainerElement","BeeSwarmContainerElement","SVGBeeSwarm","ChartContainer","yFilter","useViewportDimensions","useXRange","scaleLinear","domain","range","scaleTime","useXScale","scaleBand","useYScale","chart","sizeStyles","overflowY","VisualizePage","chartDimensions","setChartDimensions","handleResize","selectedRenderer","setSelectedRenderer","option","useRendererSelection","XSelectedItem","setXSelectedItem","onXChange","event","selection","YSelectedItem","setYSelectedItem","useStateSelection","Selections","Chart","IndexPage","aggregatedDogData","setAggregatedDogData","csv","then","map","sex","status","parseData","useDogData","Loading","frameBorder","allowFullScreen","pinkTheme","createTheme","defaultFontStyle","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","loadTheme","App","GlobalStyle","createGlobalStyle","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d6be97e6.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Flexy = styled.div`\r\n\tflex: 1;\r\n\tdisplay: flex;\r\n`\r\n\r\nexport const Row = styled(Flexy)`\r\n\tflex-direction: row;\r\n`\r\n\r\nexport const Col = styled(Flexy)`\r\n\tflex-direction: column;\r\n`\r\n\r\nexport const Page = styled(Col)`\r\n\tposition: relative;\r\n`\r\n\r\nexport const Gutter = styled.div`\r\n\twidth: 50px;\r\n`\r\n","import { IDropdownOption } from '@fluentui/react'\r\n\r\nexport enum FilterOptions {\r\n\tage = 'age',\r\n\tposted = 'posted',\r\n}\r\n\r\nexport const DropdownXOptions: IDropdownOption[] = [\r\n\t{\r\n\t\tkey: FilterOptions.age,\r\n\t\ttext: FilterOptions.age,\r\n\t},\r\n\t{\r\n\t\tkey: FilterOptions.posted,\r\n\t\ttext: 'date posted on petFinder',\r\n\t},\r\n]\r\n\r\nexport enum FilterYOptions {\r\n\tcoat = 'coat',\r\n\tgender = 'gender',\r\n\tsize = 'size',\r\n}\r\n\r\nexport const DropdownYOptions: IDropdownOption[] = [\r\n\t{\r\n\t\tkey: FilterYOptions.coat,\r\n\t\ttext: FilterYOptions.coat,\r\n\t},\r\n\t{\r\n\t\tkey: FilterYOptions.gender,\r\n\t\ttext: FilterYOptions.gender,\r\n\t},\r\n\t{\r\n\t\tkey: FilterYOptions.size,\r\n\t\ttext: FilterYOptions.size,\r\n\t},\r\n]\r\n\r\nexport enum DogAge {\r\n\tSenior = 'Senior',\r\n\tAdult = 'Adult',\r\n\tYoung = 'Young',\r\n\tBaby = 'Baby',\r\n}\r\n\r\nexport enum DogCoat {\r\n\tCurly = 'Curly',\r\n\tLong = 'Long',\r\n\tMedium = 'Medium',\r\n\tShort = 'Short',\r\n\tWire = 'Wire',\r\n\tHairless = 'Hairless',\r\n\tUnknown = 'Unknown',\r\n}\r\n\r\nexport enum DogGender {\r\n\tMale = 'Male',\r\n\tFemale = 'Female',\r\n\tUnknown = 'Unknown',\r\n}\r\nexport enum DogSize {\r\n\tSmall = 'Small',\r\n\tMedium = 'Medium',\r\n\tLarge = 'Large',\r\n\tExtraLarge = 'Extra Large',\r\n}\r\n\r\nexport const CoatYRange = [\r\n\tDogCoat.Curly,\r\n\tDogCoat.Long,\r\n\tDogCoat.Medium,\r\n\tDogCoat.Short,\r\n\tDogCoat.Wire,\r\n\tDogCoat.Hairless,\r\n\tDogCoat.Unknown,\r\n]\r\n\r\nexport const GenderYRange = [\r\n\tDogGender.Male,\r\n\tDogGender.Female,\r\n\tDogGender.Unknown,\r\n]\r\n\r\nexport const SizeYRange = [\r\n\tDogSize.Small,\r\n\tDogSize.Medium,\r\n\tDogSize.Large,\r\n\tDogSize.ExtraLarge,\r\n]\r\nexport interface DogDescriptionItem {\r\n\tpetId: number\r\n\tposted: Date\r\n\tage: number\r\n\tgender: DogGender\r\n\tsize: DogSize\r\n\tstate: string\r\n\tcoat: DogCoat\r\n\tname: string\r\n\tadoptable: boolean\r\n\timgSrc: string\r\n}\r\n\r\nexport interface ChartData {\r\n\tid: number\r\n\txValue: number\r\n\tyValue: string\r\n\tname: string\r\n}\r\n","import { useState, useCallback } from 'react'\r\nimport { IDropdownOption } from '@fluentui/react'\r\nimport { FilterOptions, FilterYOptions } from '../types/data'\r\n\r\nconst defaultXOption = FilterOptions.posted\r\nconst defaultYOption = FilterYOptions.coat\r\n\r\nexport function useStateSelection(): [\r\n\tFilterOptions,\r\n\t(event: React.FormEvent<HTMLDivElement>, item?: IDropdownOption) => void,\r\n\tFilterYOptions,\r\n\t(event: React.FormEvent<HTMLDivElement>, item?: IDropdownOption) => void,\r\n] {\r\n\tconst [XSelectedItem, setXSelectedItem] = useState<FilterOptions>(\r\n\t\tdefaultXOption,\r\n\t)\r\n\tconst onXChange = useCallback(\r\n\t\t(event: React.FormEvent<HTMLDivElement>, item?: IDropdownOption): void => {\r\n\t\t\tif (item) {\r\n\t\t\t\tconst selection = item.key as FilterOptions\r\n\t\t\t\tsetXSelectedItem(selection)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setXSelectedItem],\r\n\t)\r\n\tconst [YSelectedItem, setYSelectedItem] = useState<FilterYOptions>(\r\n\t\tdefaultYOption,\r\n\t)\r\n\tconst onYChange = useCallback(\r\n\t\t(event: React.FormEvent<HTMLDivElement>, item?: IDropdownOption): void => {\r\n\t\t\tif (item) {\r\n\t\t\t\tconst selection = item.key as FilterYOptions\r\n\t\t\t\tsetYSelectedItem(selection)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setYSelectedItem],\r\n\t)\r\n\treturn [XSelectedItem, onXChange, YSelectedItem, onYChange]\r\n}\r\n","import { DogAge, DogDescriptionItem, FilterOptions } from '../types/data'\r\n\r\nfunction generateRandomNumber(min: number, max: number): number {\r\n\treturn Math.random() * (max - min) + min\r\n}\r\n// This data file was last updated: September 29, 2019\r\nconst DataPullDate = new Date('2019-09-29T12:00:00Z')\r\n\r\nexport function calculateDays(datestring: string): number {\r\n\tconst datePosted = new Date(datestring)\r\n\treturn Math.round(\r\n\t\tMath.abs(\r\n\t\t\t(datePosted.getTime() - DataPullDate.getTime()) / (1000 * 3600 * 24),\r\n\t\t),\r\n\t)\r\n}\r\n\r\nexport function generateRandomAge(ageLabel: DogAge): number {\r\n\tswitch (ageLabel) {\r\n\t\tcase DogAge.Senior:\r\n\t\t\treturn generateRandomNumber(10, 15)\r\n\t\tcase DogAge.Adult:\r\n\t\t\treturn generateRandomNumber(5, 10)\r\n\t\tcase DogAge.Young:\r\n\t\t\treturn generateRandomNumber(1, 5)\r\n\t\tcase DogAge.Baby:\r\n\t\t\treturn generateRandomNumber(0, 1)\r\n\t\tdefault:\r\n\t\t\treturn 0\r\n\t}\r\n}\r\n\r\nexport function generateImgSrc(): string {\r\n\treturn `/images/${Math.round(generateRandomNumber(1, 10))}-dog.svg`\r\n}\r\n\r\nexport function parseColors(colorstring: string): string[] {\r\n\tconst split = colorstring.split('/')\r\n\treturn split.map(color => color.trim().toLowerCase())\r\n}\r\n\r\nfunction handleComparison(\r\n\titem: DogDescriptionItem,\r\n\txFilter: FilterOptions,\r\n\tmax: number | Date,\r\n) {\r\n\tlet localMax\r\n\tif (typeof max === 'number') {\r\n\t\tconst comparison = item[xFilter] as number\r\n\t\tif (comparison > max) {\r\n\t\t\tlocalMax = comparison\r\n\t\t}\r\n\t} else {\r\n\t\tconst comparison = item[xFilter] as Date\r\n\t\tif (comparison > max) {\r\n\t\t\tlocalMax = comparison\r\n\t\t}\r\n\t}\r\n\treturn localMax\r\n}\r\n\r\nfunction handleMinComparison(\r\n\titem: DogDescriptionItem,\r\n\txFilter: FilterOptions,\r\n\tmin: number | Date,\r\n) {\r\n\tlet localMin\r\n\tif (typeof min === 'number') {\r\n\t\tconst comparison = item[xFilter] as number\r\n\t\tif (comparison < min) {\r\n\t\t\tlocalMin = comparison\r\n\t\t}\r\n\t} else {\r\n\t\tconst comparison = item[xFilter] as Date\r\n\t\tif (comparison < min) {\r\n\t\t\tlocalMin = comparison\r\n\t\t}\r\n\t}\r\n\treturn localMin\r\n}\r\n\r\nexport function getSlicedData(\r\n\tupperbound: number,\r\n\tdataRef: DogDescriptionItem[],\r\n\txFilter: FilterOptions,\r\n): [DogDescriptionItem[], Date | number, Date | number] {\r\n\tlet dataContainer: DogDescriptionItem[] = []\r\n\tlet maxXComputed = dataRef[0][xFilter]\r\n\tlet minXComputed = dataRef[0][xFilter]\r\n\tfor (let i = 0; i < upperbound; i++) {\r\n\t\tconst selectedItem = dataRef[i]\r\n\t\tconst newMax = handleComparison(selectedItem, xFilter, maxXComputed)\r\n\t\tmaxXComputed = newMax ? newMax : maxXComputed\r\n\t\tconst newMin = handleMinComparison(selectedItem, xFilter, minXComputed)\r\n\t\tminXComputed = newMin ? newMin : minXComputed\r\n\t\tdataContainer.push(selectedItem)\r\n\t}\r\n\treturn [dataContainer, maxXComputed, minXComputed]\r\n}\r\n\r\nexport function getTooltipHtml(data: DogDescriptionItem): string {\r\n\treturn `\r\n\t<h2>${data.name.toUpperCase()}</h2>\r\n\t<img src=${process.env.PUBLIC_URL + data.imgSrc} style=\"width: 100px;\"> </img>\r\n\tAge: ${Math.round(data.age)}<br />Posted: ${data.posted.toDateString()}\r\n\t<br /> Adoptable: ${data.adoptable}\r\n\t<br /> State: ${data.state}\r\n\t`\r\n}\r\n","import { DogDescriptionItem, FilterOptions } from '../types/data'\r\nimport { useMemo, useState, useCallback, useEffect } from 'react'\r\nimport { getSlicedData } from '../utils'\r\nexport interface SliderSettings {\r\n\tmin: number\r\n\tmax: number\r\n}\r\ninterface DataBounds {\r\n\tchartData: DogDescriptionItem[]\r\n\tselectedMax: number\r\n\tsliderSettings: SliderSettings\r\n\tonSliderChange: (value: number) => void\r\n\tmaxX: number | Date\r\n\tminX: number | Date\r\n}\r\nconst defaultMax = 1000\r\n\r\nexport function useDataBounds(\r\n\tdata: DogDescriptionItem[],\r\n\txFilter: FilterOptions,\r\n): DataBounds {\r\n\tconst [selectedMax, setSelectedMax] = useState<number>(defaultMax)\r\n\tconst [maxX, setMaxX] = useState<number | Date>(0)\r\n\tconst [minX, setMinX] = useState<number | Date>(0)\r\n\r\n\tconst [chartData, setchartData] = useState<DogDescriptionItem[]>([])\r\n\tconst sliderSettings = useMemo(() => {\r\n\t\treturn { min: 500, max: data.length }\r\n\t}, [data])\r\n\r\n\t// slice the data according to slider value\r\n\tconst getChartData = useCallback(\r\n\t\t(newMax?: number) => {\r\n\t\t\tconst max = newMax ? newMax : selectedMax\r\n\r\n\t\t\tconst [cData, maxComputed, minComputed] = getSlicedData(\r\n\t\t\t\tmax,\r\n\t\t\t\tdata,\r\n\t\t\t\txFilter,\r\n\t\t\t)\r\n\t\t\tsetMaxX(maxComputed)\r\n\t\t\tsetMinX(minComputed)\r\n\t\t\tsetchartData(cData)\r\n\t\t\tsetSelectedMax(max)\r\n\t\t},\r\n\t\t[data, xFilter, selectedMax],\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tgetChartData()\r\n\t}, [xFilter, getChartData])\r\n\r\n\tconst onSliderChange = useCallback(\r\n\t\t(value: number) => {\r\n\t\t\tgetChartData(value)\r\n\t\t},\r\n\t\t[getChartData],\r\n\t)\r\n\treturn {\r\n\t\tchartData,\r\n\t\tselectedMax,\r\n\t\tsliderSettings,\r\n\t\tonSliderChange,\r\n\t\tmaxX,\r\n\t\tminX,\r\n\t}\r\n}\r\n","import React, { memo } from 'react'\r\nimport styled from 'styled-components'\r\nconst imageURL = process.env.PUBLIC_URL + '/dog.svg'\r\nexport const Logo: React.FC = memo(function Logo() {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<LogoText src={imageURL} alt=\"puppy\" />\r\n\t\t</Container>\r\n\t)\r\n})\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n`\r\n\r\nconst LogoText = styled.img`\r\n\tmargin: 0;\r\n\tmargin-top: 8px;\r\n\theight: 100px;\r\n`\r\n","import React, { memo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Logo } from './Logo'\r\n\r\nexport const Header: React.FC = memo(function Header() {\r\n\treturn (\r\n\t\t<HeaderStyles>\r\n\t\t\t<Logo />\r\n\t\t\t<h1> ❤ All the Dogs </h1>\r\n\t\t</HeaderStyles>\r\n\t)\r\n})\r\nconst HeaderStyles = styled.div`\r\n\tmargin-left: 100px;\r\n\tdisplay: flex;\r\n`\r\n","import React, { memo } from 'react'\r\n\r\nexport const Footer: React.FC = memo(function Footer() {\r\n\treturn (\r\n\t\t<span>\r\n\t\t\tIcons made by{' '}\r\n\t\t\t<a href=\"https://www.flaticon.com/authors/eucalyp\" title=\"Eucalyp\">\r\n\t\t\t\tEucalyp\r\n\t\t\t</a>\r\n\t\t\tand\r\n\t\t\t<a href=\"https://www.flaticon.com/authors/freepik\" title=\"freepik\">\r\n\t\t\t\tFreepik\r\n\t\t\t</a>{' '}\r\n\t\t\tfrom{' '}\r\n\t\t\t<a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n\t\t\t\twww.flaticon.com\r\n\t\t\t</a>\r\n\t\t</span>\r\n\t)\r\n})\r\n","/**\r\n * Performs function debouncing for events\r\n * @param callback function for debouncing\r\n * @param delay number of milliseconds delay\r\n */\r\n\r\nexport function debounce(\r\n\tcallback: (...args: any[]) => any,\r\n\tdelay = 100,\r\n): (this: any, ...args: any[]) => any {\r\n\tlet timer: any\r\n\treturn function (this: any, ...args: any[]) {\r\n\t\tif (timer) {\r\n\t\t\tclearTimeout(timer)\r\n\t\t}\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\r\n\t\tconst that = this\r\n\t\ttimer = setTimeout(() => {\r\n\t\t\ttimer = null as any\r\n\t\t\t;(callback as any).call(that, ...args)\r\n\t\t}, delay)\r\n\t}\r\n}\r\n","import React, { memo } from 'react'\r\nimport { Dropdown, IDropdownStyles, IDropdownOption } from '@fluentui/react'\r\nimport { FilterOptions, FilterYOptions } from '../../../types/data'\r\nimport { debounce } from '../../../utils/debounce'\r\nimport styled from 'styled-components'\r\n\r\nconst dropdownStyles: Partial<IDropdownStyles> = {\r\n\tdropdown: { width: 150 },\r\n\troot: { display: 'inline-table' },\r\n\ttitle: { fontFamily: \"'Gaegu', cursive\", fontSize: 18 },\r\n\tlabel: { fontFamily: \"'Gaegu', cursive\" },\r\n\tdropdownOptionText: { fontFamily: \"'Gaegu', cursive\", fontSize: 18 },\r\n}\r\n\r\ninterface ControlledDropdownProps {\r\n\tselectedOption: FilterOptions | FilterYOptions\r\n\tonDropDrownChange: (\r\n\t\tevent: React.FormEvent<HTMLDivElement>,\r\n\t\titem?: IDropdownOption,\r\n\t) => void\r\n\toptions: IDropdownOption[]\r\n\tlabel?: string\r\n}\r\n\r\nexport const ControlledDropdown: React.FC<ControlledDropdownProps> = memo(\r\n\tfunction ControlledDropdown({\r\n\t\tselectedOption,\r\n\t\tonDropDrownChange,\r\n\t\toptions,\r\n\t\tlabel,\r\n\t}) {\r\n\t\treturn (\r\n\t\t\t<Spacer>\r\n\t\t\t\t<Dropdown\r\n\t\t\t\t\tlabel={label || ''}\r\n\t\t\t\t\tonChange={debounce(onDropDrownChange)}\r\n\t\t\t\t\tselectedKey={selectedOption}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tstyles={dropdownStyles}\r\n\t\t\t\t/>\r\n\t\t\t</Spacer>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst Spacer = styled.div`\r\n\tmargin-left: 10px;\r\n\tdisplay: inline-table;\r\n`\r\n","import React, { memo } from 'react'\r\nimport { Slider, ISliderStyles } from '@fluentui/react'\r\nimport { SliderSettings } from '../../../hooks/useDataBounds'\r\nimport styled from 'styled-components'\r\n\r\ninterface ControlledSliderProps {\r\n\tsliderOnChange: (value: number) => void\r\n\tsliderValue: number\r\n\tsliderSettings: SliderSettings\r\n}\r\n\r\nconst sliderStyles: Partial<ISliderStyles> = {\r\n\tslideBox: { width: 300 },\r\n\troot: { display: 'inline-table', fontFamily: \"'Gaegu', cursive\" },\r\n\ttitleLabel: { fontFamily: \"'Gaegu', cursive\" },\r\n}\r\n\r\nexport const ControlledSlider: React.FC<ControlledSliderProps> = memo(\r\n\tfunction ControlledSlider({ sliderOnChange, sliderValue, sliderSettings }) {\r\n\t\treturn (\r\n\t\t\t<Spacer>\r\n\t\t\t\t<Slider\r\n\t\t\t\t\tlabel=\"Adjust node count\"\r\n\t\t\t\t\tmin={sliderSettings.min}\r\n\t\t\t\t\tmax={sliderSettings.max}\r\n\t\t\t\t\tstep={1000}\r\n\t\t\t\t\tshowValue={true}\r\n\t\t\t\t\tsnapToStep={true}\r\n\t\t\t\t\tvalue={sliderValue}\r\n\t\t\t\t\tonChange={sliderOnChange}\r\n\t\t\t\t\tstyles={sliderStyles}\r\n\t\t\t\t/>\r\n\t\t\t</Spacer>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst Spacer = styled.div`\r\n\tmargin-left: 10px;\r\n\tdisplay: inline-table;\r\n`\r\n","import * as React from 'react'\r\nimport { memo, FormEvent } from 'react'\r\nimport { IChoiceGroupOption, ChoiceGroup } from '@fluentui/react'\r\nimport styled from 'styled-components'\r\n\r\nexport enum Renderers {\r\n\tSVG = 'SVG',\r\n\tCanvas = 'Canvas',\r\n\tWebGL = 'WebGL',\r\n}\r\n\r\nexport const RendererOptions: IChoiceGroupOption[] = [\r\n\t{\r\n\t\tkey: Renderers.SVG,\r\n\t\ttext: Renderers.SVG,\r\n\t\timageSrc: `${process.env.PUBLIC_URL}/cocker-sp-outline.svg`,\r\n\t\tselectedImageSrc: `${process.env.PUBLIC_URL}/cocker-sp.svg`,\r\n\t\timageSize: { width: 32, height: 32 },\r\n\t},\r\n\t{\r\n\t\tkey: Renderers.Canvas,\r\n\t\ttext: Renderers.Canvas,\r\n\t\timageSrc: `${process.env.PUBLIC_URL}/cocker-sp-outline.svg`,\r\n\t\tselectedImageSrc: `${process.env.PUBLIC_URL}/cocker-sp.svg`,\r\n\t\timageSize: { width: 32, height: 32 },\r\n\t},\r\n\t{\r\n\t\tkey: Renderers.WebGL,\r\n\t\ttext: Renderers.WebGL,\r\n\t\timageSrc: `${process.env.PUBLIC_URL}/cocker-sp-outline.svg`,\r\n\t\tselectedImageSrc: `${process.env.PUBLIC_URL}/cocker-sp.svg`,\r\n\t\timageSize: { width: 32, height: 32 },\r\n\t},\r\n]\r\n\r\ninterface RendererControlsProps {\r\n\tselectedRender: string\r\n\tonChange: (\r\n\t\tev: FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n\t\toption?: IChoiceGroupOption,\r\n\t) => void\r\n}\r\nexport const RendererControls: React.FC<RendererControlsProps> = memo(\r\n\tfunction RendererControls({ selectedRender, onChange }) {\r\n\t\treturn (\r\n\t\t\t<Spacer>\r\n\t\t\t\t<ChoiceGroup\r\n\t\t\t\t\tselectedKey={selectedRender}\r\n\t\t\t\t\toptions={RendererOptions}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tlabel=\"Renderer\"\r\n\t\t\t\t/>\r\n\t\t\t</Spacer>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst Spacer = styled.div`\r\n\tmargin-left: 10px;\r\n\tdisplay: inline-table;\r\n`\r\n","import React, { memo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ControlledDropdown } from './ControlledDropdown'\r\nimport { ControlledSlider } from './ControlledSlider/ControlledSlider'\r\nimport {\r\n\tFilterOptions,\r\n\tFilterYOptions,\r\n\tDropdownXOptions,\r\n\tDropdownYOptions,\r\n} from '../../types/data'\r\nimport { IDropdownOption, IChoiceGroupOption } from '@fluentui/react'\r\nimport { SliderSettings } from '../../hooks/useDataBounds'\r\nimport { RendererControls } from './RendererControls'\r\n\r\ninterface ControlsProps {\r\n\txAxisFilter: FilterOptions\r\n\tyAxisFilter: FilterYOptions\r\n\tonXDropDrownChange: (\r\n\t\tevent: React.FormEvent<HTMLDivElement>,\r\n\t\titem?: IDropdownOption,\r\n\t) => void\r\n\tonYDropDrownChange: (\r\n\t\tevent: React.FormEvent<HTMLDivElement>,\r\n\t\titem?: IDropdownOption,\r\n\t) => void\r\n\tonSliderChange: (value: number) => void\r\n\tsliderSettings: SliderSettings\r\n\tselectedMax: number\r\n\r\n\tselectedRender: string\r\n\tonRendererChange: (\r\n\t\tev: React.FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n\t\toption?: IChoiceGroupOption,\r\n\t) => void\r\n}\r\n\r\nexport const Controls: React.FC<ControlsProps> = memo(function Controls({\r\n\txAxisFilter,\r\n\tyAxisFilter,\r\n\tonXDropDrownChange,\r\n\tonYDropDrownChange,\r\n\tonSliderChange,\r\n\tsliderSettings,\r\n\tselectedMax,\r\n\tselectedRender,\r\n\tonRendererChange,\r\n}) {\r\n\treturn (\r\n\t\t<ControlStyles>\r\n\t\t\t<ControlledDropdown\r\n\t\t\t\tselectedOption={xAxisFilter}\r\n\t\t\t\tonDropDrownChange={onXDropDrownChange}\r\n\t\t\t\toptions={DropdownXOptions}\r\n\t\t\t\tlabel={'x-axis'}\r\n\t\t\t/>\r\n\t\t\t<ControlledDropdown\r\n\t\t\t\tselectedOption={yAxisFilter}\r\n\t\t\t\tonDropDrownChange={onYDropDrownChange}\r\n\t\t\t\toptions={DropdownYOptions}\r\n\t\t\t\tlabel={'grouped dogs by:'}\r\n\t\t\t/>\r\n\t\t\t<ControlledSlider\r\n\t\t\t\tsliderOnChange={onSliderChange}\r\n\t\t\t\tsliderSettings={sliderSettings}\r\n\t\t\t\tsliderValue={selectedMax}\r\n\t\t\t/>\r\n\t\t\t<RendererControls\r\n\t\t\t\tselectedRender={selectedRender}\r\n\t\t\t\tonChange={onRendererChange}\r\n\t\t\t/>\r\n\t\t</ControlStyles>\r\n\t)\r\n})\r\n\r\nconst ControlStyles = styled.div`\r\n\tdisplay: 'inline-flex';\r\n\tmargin-left: 100px;\r\n`\r\n","import React, {\r\n\tmemo,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tMutableRefObject,\r\n\tuseMemo,\r\n} from 'react'\r\nimport { useDimensions } from './useDimensions'\r\nimport { SizedToParentProps } from './types'\r\n\r\nconst DEFAULT_STYLE = {\r\n\t/* position: absolute so we don't cause the parent element to continually expand */\r\n\tposition: 'absolute',\r\n\tleft: 0,\r\n\tright: 0,\r\n\ttop: 0,\r\n\tbottom: 0,\r\n\toverflow: 'hidden',\r\n} as React.CSSProperties\r\n\r\n/**\r\n * Provides an element that is sized to its parent, without affecting the size of the parent.\r\n * It works by creating an element that is out of the layout flow (using position: absolute).\r\n *\r\n * Children should be styled with 'width: 100%, height: 100%' or use the onResize event listener to control the size of children or some other combination\r\n */\r\nexport const SizedToParent: React.FC<SizedToParentProps> = memo(\r\n\t({ sizedRef, onResize, children, className, style }: SizedToParentProps) => {\r\n\t\tconst defaultRef = useRef(null)\r\n\t\tconst ref: MutableRefObject<HTMLElement | null> = useMemo(\r\n\t\t\t() => sizedRef || defaultRef,\r\n\t\t\t[defaultRef, sizedRef],\r\n\t\t)\r\n\t\tconst dims = useDimensions(ref)\r\n\t\tuseEffect(() => {\r\n\t\t\tif (ref && dims && onResize) {\r\n\t\t\t\tonResize(dims)\r\n\t\t\t}\r\n\t\t}, [ref, dims, onResize])\r\n\t\tconst finalStyle = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\t...DEFAULT_STYLE,\r\n\t\t\t\t...(style || {}),\r\n\t\t\t}),\r\n\t\t\t[style],\r\n\t\t)\r\n\r\n\t\treturn (\r\n\t\t\t<div className={className} ref={ref as any} style={finalStyle}>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t)\r\n\t},\r\n)\r\nSizedToParent.displayName = 'SizedToParent'\r\n","import { useState, MutableRefObject, useEffect } from 'react'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\nimport { Dimensions } from './types'\r\n\r\n/**\r\n * A hook for getting the dimensions of the given element\r\n * This hook also updates when the given element resizes\r\n * @param ref A ref to the element to measure\r\n * @returns The dimensions for the element.\r\n */\r\nexport function useDimensions(\r\n\tref: MutableRefObject<HTMLElement | null>,\r\n): Dimensions | undefined {\r\n\tconst [dimensions, setDimensions] = useState<Dimensions | undefined>()\r\n\tuseEffect(() => {\r\n\t\tif (ref && ref.current) {\r\n\t\t\tconst rect = ref.current.getBoundingClientRect()\r\n\t\t\tlet dims: Dimensions = {\r\n\t\t\t\twidth: Math.floor(rect.width),\r\n\t\t\t\theight: Math.floor(rect.height),\r\n\t\t\t}\r\n\t\t\tsetDimensions(dims)\r\n\r\n\t\t\tconst observer = new ResizeObserver(entries => {\r\n\t\t\t\tconst entry = entries[0]\r\n\t\t\t\tif (entry) {\r\n\t\t\t\t\tconst newDims = {\r\n\t\t\t\t\t\twidth: Math.floor(entry.contentRect.width),\r\n\t\t\t\t\t\theight: Math.floor(entry.contentRect.height),\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (newDims.width !== dims.width || newDims.height !== dims.height) {\r\n\t\t\t\t\t\tdims = newDims\r\n\t\t\t\t\t\tsetDimensions(newDims)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobserver.observe(ref.current)\r\n\t\t\treturn () => {\r\n\t\t\t\tobserver.disconnect()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [ref])\r\n\treturn dimensions as Dimensions | undefined\r\n}\r\n","export const correctedMargins = {\r\n\tleft: 100,\r\n\tright: 100,\r\n\ttop: 10,\r\n\tbottom: 40,\r\n}\r\n","import { useMemo } from 'react'\r\n\r\nconst colors = [\r\n\t'#80acf7',\r\n\t'#35c456',\r\n\t'#f88c8d',\r\n\t'#3dbcbc',\r\n\t'#c2ab37',\r\n\t'#f67eed',\r\n\t'#40b6d8',\r\n\t'#95b439',\r\n\t'#f683ba',\r\n\t'#3fbc9b',\r\n]\r\n\r\nexport function useColorizer(yRange: string[]): (item: string) => string {\r\n\tconst idNumberMap = useMemo((): Record<string, number> => {\r\n\t\treturn yRange.reduce((idMap, key: string, idx: number) => {\r\n\t\t\tidMap[key] = idx\r\n\t\t\treturn idMap\r\n\t\t}, {} as Record<string, number>)\r\n\t}, [yRange])\r\n\r\n\tconst nominalColorScale = useMemo((): ((item: string) => string) => {\r\n\t\tconst scale = (i: number) => colors[i % colors.length]\r\n\t\treturn (id: string): string => scale(idNumberMap[id])\r\n\t}, [idNumberMap])\r\n\r\n\treturn nominalColorScale\r\n}\r\n","import { SpriteInternalCoords } from '../../types'\r\n\r\n// maps datum props in \"d3 style\" to relevant pixi sprite props\r\nexport const circle = (\r\n\tspriteCoordinates: SpriteInternalCoords,\r\n\tradius: number,\r\n) => ({\r\n\tx: spriteCoordinates.x,\r\n\ty: spriteCoordinates.y,\r\n\twidth: radius * 2,\r\n\theight: radius * 2,\r\n\talpha: 1.0,\r\n\ttint: spriteCoordinates.hex ? parseColor(spriteCoordinates.hex) : 0xffffff,\r\n})\r\n\r\n// maps a list of attr properties onto a sprite\r\n// note, this can't use object assign because the PIXI.Container has the Sprite ref\r\nexport const attrs = (sprite: any, a: any) => {\r\n\tObject.keys(a).forEach(key => {\r\n\t\tsprite[key] = a[key]\r\n\t})\r\n\treturn sprite\r\n}\r\n\r\nconst parseColor = (color: string) => {\r\n\tconst clean = color.replace('#', '')\r\n\treturn parseInt(clean, 16)\r\n}\r\n","import { DogDescriptionItem } from '../../../../types/data'\r\nimport { getTooltipHtml } from '../../../../utils'\r\n\r\nclass TooltipManager {\r\n\tprivate toolTipElement: HTMLDivElement | null\r\n\r\n\tconstructor(toolTipElement: HTMLDivElement | null) {\r\n\t\tthis.toolTipElement = toolTipElement\r\n\t}\r\n\r\n\tpublic setTooltipElement(element: HTMLDivElement | null) {\r\n\t\tthis.toolTipElement = element\r\n\t}\r\n\r\n\tprivate updateTooltipPositioner(postion: [number, number]) {\r\n\t\tconst element = this.toolTipElement\r\n\t\tif (postion && element) {\r\n\t\t\tconst xPos = postion[0]\r\n\t\t\tconst yPos = postion[1]\r\n\t\t\tif (element) {\r\n\t\t\t\telement.style.left = `${xPos + 150}px`\r\n\t\t\t\telement.style.top = `${yPos - 10}px`\r\n\t\t\t\telement.style.visibility = 'visible'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic showToolTip(data: DogDescriptionItem, coords: [number, number]) {\r\n\t\tconst tooltip = this.toolTipElement\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.style.padding = `2px`\r\n\t\t\ttooltip.innerHTML = getTooltipHtml(data)\r\n\t\t\ttooltip.style.backgroundColor = '#f1f1f1'\r\n\t\t\ttooltip.style.border = `1px solid #767676`\r\n\t\t\ttooltip.style.color = 'black'\r\n\t\t\ttooltip.style.fontSize = '14px'\r\n\t\t\ttooltip.style.visibility = 'visible'\r\n\t\t\tthis.updateTooltipPositioner(coords)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic hideTooltip() {\r\n\t\tconst tooltip = this.toolTipElement\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.style.visibility = 'hidden'\r\n\t\t}\r\n\t}\r\n}\r\nexport default TooltipManager\r\n","import { DogDescriptionItem } from '../../../../types/data'\r\nimport { FilterMap, ScaleProps, SpriteInternalCoords } from '../../types'\r\n\r\nclass ScalesManager {\r\n\tprivate filters: FilterMap\r\n\tprivate scales: ScaleProps\r\n\r\n\tconstructor(filters: FilterMap, scales: ScaleProps) {\r\n\t\tthis.filters = filters\r\n\t\tthis.scales = scales\r\n\t}\r\n\r\n\tpublic setFilters(filters: FilterMap) {\r\n\t\tthis.filters = filters\r\n\t}\r\n\r\n\tpublic setScales(scales: ScaleProps) {\r\n\t\tthis.scales = scales\r\n\t}\r\n\r\n\tpublic getXYPosition(\r\n\t\td: DogDescriptionItem,\r\n\t\tradius: number,\r\n\t): SpriteInternalCoords {\r\n\t\tconst { xScale, yScale, colorScale } = this.scales\r\n\t\tconst { x, y } = this.filters\r\n\t\treturn {\r\n\t\t\tx: (xScale(d[x]) || 0) - radius,\r\n\t\t\ty: (yScale(d[y]) || 0) + yScale.bandwidth() / 2 - radius,\r\n\t\t\thex: colorScale ? colorScale(d[y]) : undefined,\r\n\t\t\tnode: d,\r\n\t\t}\r\n\t}\r\n}\r\nexport default ScalesManager\r\n","import { SpriteMap, FilterMap, ScaleProps } from '../types'\r\nimport * as PIXI from 'pixi.js'\r\nimport { Dimensions } from '../../../utils/types'\r\nimport { circle, attrs } from './utils'\r\nimport { easeCubic } from 'd3-ease'\r\nimport { correctedMargins } from '../constants'\r\nimport TooltipManager from './utils/TooltipManager'\r\nimport { Renderers } from '../../Controls/RendererControls'\r\nimport { DogDescriptionItem } from '../../../types/data'\r\nimport ScalesManager from './utils/ScalesManager'\r\n// @ts-ignore\r\nexport * from 'pixi.js-legacy'\r\n// @ts-ignore\r\nexport * from '@pixi/canvas-renderer'\r\n\r\nconst duration = 1000\r\nconst radius = 4\r\n\r\nclass PixiRenderer {\r\n\tprivate pixiElement: HTMLDivElement\r\n\tprivate renderer: PIXI.Renderer | PIXI.CanvasRenderer | null\r\n\tprivate circleTexture: PIXI.Texture\r\n\tprivate nodesStage: PIXI.Container\r\n\tprivate stage: PIXI.Container\r\n\tprivate dimensions: Dimensions\r\n\tprivate spriteKeys: Set<string> = new Set([])\r\n\tprivate tweenedScale = 1\r\n\tprivate ToolTipManagerInstance?: TooltipManager //handles visibility of tooltip\r\n\tprivate rendererType: Renderers\r\n\tpublic ScalesManagerInstance: ScalesManager\r\n\tprivate spriteMap: SpriteMap = {}\r\n\r\n\tconstructor(\r\n\t\tcontainerEl: HTMLDivElement,\r\n\t\ttoolTipElement: HTMLDivElement | null,\r\n\t\tdimensions: Dimensions,\r\n\t\trenderer: Renderers,\r\n\t\tfilters: FilterMap,\r\n\t\tscales: ScaleProps,\r\n\t) {\r\n\t\tthis.dimensions = dimensions\r\n\t\tthis.pixiElement = containerEl\r\n\t\tthis.ToolTipManagerInstance = new TooltipManager(toolTipElement)\r\n\t\tthis.rendererType = renderer\r\n\t\tthis.ScalesManagerInstance = new ScalesManager(filters, scales)\r\n\t\t// === set up pixi stuff ===\r\n\t\tthis.renderer = this.setRenderer(renderer, dimensions)\r\n\t\tconst circleTemplate = new PIXI.Graphics()\r\n\t\t\t.beginFill(0xffffff)\r\n\t\t\t.lineStyle(0)\r\n\t\t\t.drawCircle(0, 0, 100)\r\n\t\t\t.endFill()\r\n\t\tthis.circleTexture = this.renderer.generateTexture(\r\n\t\t\tcircleTemplate,\r\n\t\t\tPIXI.SCALE_MODES.NEAREST,\r\n\t\t\tdimensions.width / dimensions.height,\r\n\t\t)\r\n\t\t// canvas element to draw to\r\n\t\tthis.pixiElement.appendChild(this.renderer.view)\r\n\t\tthis.nodesStage = new PIXI.Container()\r\n\r\n\t\t// stage is container for our sprite elements\r\n\t\tthis.stage = new PIXI.Container()\r\n\t\tthis.stage.addChild(this.nodesStage)\r\n\t\t// adjust for the margins\r\n\t\tthis.stage.transform.position.y = correctedMargins.top\r\n\t\tthis.stage.transform.position.x = correctedMargins.left\r\n\t}\r\n\r\n\tprivate setRenderer(renderer: Renderers, dimensions: Dimensions) {\r\n\t\t// Renderer will choose webGL if supported and failover to canvas\r\n\t\t// For only canvas renderer use forceCanvas option but only supported with pixi-legacy module\r\n\t\t// alternatively can use PIXI.Application\r\n\r\n\t\tconst pixiRender = PIXI.autoDetectRenderer({\r\n\t\t\twidth: dimensions.width,\r\n\t\t\theight: dimensions.height,\r\n\t\t\tantialias: true,\r\n\t\t\ttransparent: true,\r\n\t\t\tforceCanvas: renderer === Renderers.Canvas,\r\n\t\t})\r\n\t\tconst rendererType =\r\n\t\t\tpixiRender.type === PIXI.RENDERER_TYPE.CANVAS ? 'CANVAS' : 'WEBGL'\r\n\t\tconsole.log('pixiRenderer', rendererType)\r\n\t\treturn pixiRender\r\n\t}\r\n\r\n\tpublic getRendererType(): Renderers {\r\n\t\treturn this.rendererType\r\n\t}\r\n\r\n\tpublic setScales(scales: ScaleProps) {\r\n\t\tthis.ScalesManagerInstance.setScales(scales)\r\n\t}\r\n\r\n\tpublic setFilters(filters: FilterMap) {\r\n\t\tthis.ScalesManagerInstance.setFilters(filters)\r\n\t}\r\n\r\n\tpublic setTooltipElement(element: HTMLDivElement | null) {\r\n\t\tif (this.ToolTipManagerInstance) {\r\n\t\t\tthis.ToolTipManagerInstance.setTooltipElement(element)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updateChart(data: DogDescriptionItem[]) {\r\n\t\tthis.updateTransition(data)\r\n\t}\r\n\r\n\tpublic remove() {\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.spriteKeys = new Set([])\r\n\t\t\tthis.spriteMap = {}\r\n\t\t\tthis.stage.destroy({ children: true })\r\n\t\t\tthis.pixiElement.removeChild(this.renderer.view)\r\n\t\t\tthis.renderer.destroy(true)\r\n\t\t\tthis.renderer = null\r\n\t\t}\r\n\t}\r\n\r\n\t// More info on managing pixi sprites for improving performance\r\n\t// https://stackoverflow.com/questions/33437002/pixi-js-animate-circle-improving-performance\r\n\tprivate enter(data: DogDescriptionItem[]) {\r\n\t\tif (data) {\r\n\t\t\t// Set the sprite map up once\r\n\t\t\tdata.forEach(node => {\r\n\t\t\t\tconst sprite = new PIXI.Sprite(this.circleTexture)\r\n\t\t\t\tconst posAttrs = this.ScalesManagerInstance.getXYPosition(node, radius)\r\n\t\t\t\tattrs(sprite, circle(posAttrs, radius))\r\n\t\t\t\tconst key = `${node.petId}`\r\n\t\t\t\tsprite.name = key\r\n\t\t\t\t// map sprite key with sprite\r\n\t\t\t\tthis.spriteMap[key] = { sprite, _data: posAttrs }\r\n\t\t\t\t// setting sprite interactive allows for mouse events\r\n\t\t\t\tsprite.interactive = true\r\n\t\t\t\tsprite.interactiveChildren = true\r\n\t\t\t\tsprite.on('mouseover', (ev: any) => this.handleMouseover(ev, key))\r\n\t\t\t\tsprite.on('mouseout', (ev: any) => this.handleMouseout(ev, key))\r\n\t\t\t\tthis.spriteKeys.add(key)\r\n\t\t\t\tthis.nodesStage.addChild(sprite)\r\n\t\t\t})\r\n\t\t\t// uncomment to debug sprite props\r\n\t\t\t// console.log(this.spriteMap[Object.keys(this.spriteMap)[0]].height)\r\n\t\t\tthis.renderPixi()\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleMouseover(ev: PIXI.InteractionEvent, nodeId: string) {\r\n\t\tev.stopPropagation()\r\n\r\n\t\tif (this.spriteMap[nodeId] && this.ToolTipManagerInstance) {\r\n\t\t\tconst { sprite, _data } = this.spriteMap[nodeId]\r\n\t\t\t// const current = this.data[nodeId]\r\n\t\t\tconst coords = [_data.x, _data.y] as [number, number]\r\n\t\t\tthis.ToolTipManagerInstance.showToolTip(_data.node, coords)\r\n\t\t\tconst hoverColor = '#2e78ce'\r\n\t\t\tsprite.height = 20\r\n\t\t\tsprite.width = 20\r\n\t\t\tsprite.tint = parseInt(hoverColor.replace('#', ''), 16)\r\n\t\t}\r\n\r\n\t\tthis.renderPixi()\r\n\t\tev.stopPropagation()\r\n\t}\r\n\r\n\tprivate handleMouseout(ev: PIXI.InteractionEvent, nodeId: string) {\r\n\t\tev.stopPropagation()\r\n\t\tif (this.ToolTipManagerInstance) {\r\n\t\t\tthis.ToolTipManagerInstance.hideTooltip()\r\n\t\t}\r\n\t\tif (this.spriteMap[nodeId]) {\r\n\t\t\tconst { sprite, _data } = this.spriteMap[nodeId]\r\n\t\t\tconst defaultColor = _data.hex\r\n\t\t\tif (defaultColor) {\r\n\t\t\t\tsprite.tint = parseInt(defaultColor.replace('#', ''), 16)\r\n\t\t\t}\r\n\t\t\tsprite.height = 4\r\n\t\t\tsprite.width = 4\r\n\t\t}\r\n\r\n\t\tthis.renderPixi()\r\n\t}\r\n\r\n\tprivate updateTransition(currentData: DogDescriptionItem[]) {\r\n\t\tif (Object.keys(this.spriteMap).length > 0) {\r\n\t\t\tlet startScale = this.tweenedScale\r\n\t\t\tlet targetScale = 1\r\n\t\t\tlet start: number | undefined\r\n\t\t\tconst tweenRender = () => {\r\n\t\t\t\tif (start === undefined) {\r\n\t\t\t\t\tstart = Date.now()\r\n\t\t\t\t}\r\n\t\t\t\tconst deltaTime = Date.now() - start\r\n\t\t\t\tconst percent = Math.max(0, Math.min(deltaTime / duration, 1)) // add min to not \"overshoot\" value\r\n\t\t\t\tconst eased = easeCubic(percent)\r\n\t\t\t\tconst finalScale = startScale + (targetScale - startScale) * eased\r\n\t\t\t\t// track which ones need to be visible\r\n\t\t\t\tconst spriteQueue = this.spriteKeys\r\n\t\t\t\tconst nodesToAdd: DogDescriptionItem[] = []\r\n\t\t\t\tcurrentData.forEach(currNode => {\r\n\t\t\t\t\tconst spriteKey = `${currNode.petId}`\r\n\t\t\t\t\tif (this.spriteMap[spriteKey]) {\r\n\t\t\t\t\t\tconst { sprite, _data } = this.spriteMap[spriteKey]\r\n\t\t\t\t\t\tconst currNodePos = this.ScalesManagerInstance.getXYPosition(\r\n\t\t\t\t\t\t\tcurrNode,\r\n\t\t\t\t\t\t\tradius,\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tconst prevNode = _data\r\n\r\n\t\t\t\t\t\tspriteQueue.delete(spriteKey)\r\n\t\t\t\t\t\tsprite.visible = true\r\n\t\t\t\t\t\tattrs(sprite, circle(currNodePos, radius))\r\n\t\t\t\t\t\tconst x = eased * (currNodePos.x - prevNode.x) + prevNode.x\r\n\t\t\t\t\t\tconst y = eased * (currNodePos.y - prevNode.y) + prevNode.y\r\n\t\t\t\t\t\tsprite.x = x - radius\r\n\t\t\t\t\t\tsprite.y = (y! - radius) * finalScale\r\n\t\t\t\t\t\tif (percent >= 1) {\r\n\t\t\t\t\t\t\tthis.spriteMap[spriteKey]._data = currNodePos\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (percent >= 1) {\r\n\t\t\t\t\t\t\t// add for this first time\r\n\t\t\t\t\t\t\tnodesToAdd.push(currNode)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (percent >= 1) {\r\n\t\t\t\t\tspriteQueue.forEach((id: string) => {\r\n\t\t\t\t\t\tconst sprite = this.spriteMap[id].sprite as PIXI.Sprite\r\n\t\t\t\t\t\tsprite.visible = false\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (nodesToAdd.length > 0) {\r\n\t\t\t\t\t\tthis.enter(nodesToAdd)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.tweenedScale = finalScale\r\n\t\t\t\tthis.renderPixi()\r\n\t\t\t\tif (percent < 1.0) {\r\n\t\t\t\t\trequestAnimationFrame(tweenRender)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\trequestAnimationFrame(tweenRender)\r\n\t\t} else {\r\n\t\t\tthis.enter(currentData)\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resize = (width: number, height: number) => {\r\n\t\tthis.dimensions.height = height\r\n\t\tthis.dimensions.width = width\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.resize(width, height)\r\n\t\t}\r\n\t}\r\n\tprivate renderPixi() {\r\n\t\t// render the stage\r\n\t\tif (this.renderer) {\r\n\t\t\tthis.renderer.render(this.stage)\r\n\t\t}\r\n\t}\r\n}\r\nexport default PixiRenderer\r\n","import { useState, useCallback } from 'react'\r\n\r\n/**\r\n * Use a callback-based element reference. This is useful when the\r\n * element is required for in-band rendering or effectful measuring.\r\n *\r\n */\r\nexport function useCallbackRef<T>(): [(ref: T) => void, T | null] {\r\n\tconst [element, setElement] = useState<T | null>(null)\r\n\tconst refCb = useCallback((node: T) => setElement(node), [setElement])\r\n\treturn [refCb, element]\r\n}\r\n","import { useEffect } from 'react'\r\nimport { select } from 'd3-selection'\r\n\r\nexport function useResizeHandling(\r\n\telement: SVGSVGElement | null,\r\n\twidth: number,\r\n\theight: number,\r\n): void {\r\n\tuseEffect(() => {\r\n\t\tif (element) {\r\n\t\t\tselect(element).attr('width', width).attr('height', height)\r\n\t\t}\r\n\t}, [element, width, height])\r\n}\r\n","import { useEffect } from 'react'\r\nimport { select } from 'd3-selection'\r\nimport { axisBottom, axisLeft } from 'd3-axis'\r\nimport { ScaleLinear, ScaleBand, ScaleTime } from 'd3-scale'\r\nexport function useXAxisTheming(\r\n\telement: SVGGElement | null,\r\n\theight: number,\r\n\txScale: ScaleLinear<number, number> | ScaleTime<number, number>,\r\n): void {\r\n\tuseEffect(() => {\r\n\t\tif (element && element !== null) {\r\n\t\t\tselect(element)\r\n\t\t\t\t.call(axisBottom(xScale))\r\n\t\t\t\t.attr('transform', `translate(0, ${height})`)\r\n\t\t\t\t.selectAll('text')\r\n\t\t\t\t.style('font-family', \"'Gaegu', cursive\")\r\n\t\t\t\t.style('font-size', '20px')\r\n\t\t}\r\n\t}, [element, height, xScale])\r\n}\r\n\r\nexport function useYAxisTheming(\r\n\telement: SVGGElement | null,\r\n\tyScale: ScaleBand<string>,\r\n): void {\r\n\tuseEffect(() => {\r\n\t\tif (element && element !== null) {\r\n\t\t\tselect(element)\r\n\t\t\t\t.call(axisLeft(yScale))\r\n\t\t\t\t.selectAll('text')\r\n\t\t\t\t.style('font-family', \"'Gaegu', cursive\")\r\n\t\t\t\t.style('font-size', '20px')\r\n\t\t}\r\n\t}, [element, yScale])\r\n}\r\n","import React, { memo } from 'react'\r\nimport { useCallbackRef } from '../hooks/useCallbackRef'\r\nimport { useResizeHandling } from '../hooks/useResizeHandling'\r\nimport { useXAxisTheming, useYAxisTheming } from '../hooks/axis'\r\nimport { ScaleProps } from '../types'\r\nimport { correctedMargins } from '../constants'\r\n\r\nexport interface BeeSwarmSVGProps {\r\n\twidth: number\r\n\tvpWidth: number\r\n\tvpHeight: number\r\n\theight: number\r\n\tscales: ScaleProps\r\n}\r\n\r\nexport const BeeSwarmSVG: React.FC<BeeSwarmSVGProps> = memo(\r\n\tfunction BeeSwarmSVG({\r\n\t\twidth,\r\n\t\theight,\r\n\t\tscales,\r\n\t\tvpHeight,\r\n\t\tvpWidth,\r\n\t}: BeeSwarmSVGProps) {\r\n\t\t// Get Refs for SVG Elements\r\n\t\tconst [setSvgEl, svgElementRef] = useCallbackRef<SVGSVGElement>()\r\n\t\tconst [setXAxisElement, xAxisElement] = useCallbackRef<SVGGElement>()\r\n\t\tconst [setYAxisElement, yAxisElement] = useCallbackRef<SVGGElement>()\r\n\r\n\t\t// Optional: Apply thematic D3 themes\r\n\t\tuseResizeHandling(svgElementRef, width, height) // modify to have transparent background\r\n\r\n\t\t// Append Axis\r\n\t\tuseXAxisTheming(xAxisElement, vpHeight, scales.xScale)\r\n\t\tuseYAxisTheming(yAxisElement, scales.yScale)\r\n\r\n\t\treturn (\r\n\t\t\t<div style={{ position: 'absolute', zIndex: 1 }}>\r\n\t\t\t\t<svg ref={setSvgEl} width={width} height={height}>\r\n\t\t\t\t\t<g\r\n\t\t\t\t\t\tclassName=\"viewport\"\r\n\t\t\t\t\t\ttransform={`translate(${correctedMargins.left},${correctedMargins.top})`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<g className=\"yscale\" ref={setYAxisElement}></g>\r\n\t\t\t\t\t\t<g className=\"xscale\" ref={setXAxisElement}></g>\r\n\t\t\t\t\t\t<g className=\"plotarea\" width={vpWidth} height={vpHeight}></g>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t)\r\n\t},\r\n)\r\n","import React, { memo, useRef } from 'react'\r\nimport { usePixiInstance } from './hooks/usePixiInstance'\r\nimport { useUpdatedData } from './hooks/useUpdatedData'\r\nimport { BeeSwarmSVG } from './BeeSwarmSVG'\r\nimport styled from 'styled-components'\r\nimport { ScaleProps } from '../types'\r\nimport { Renderers } from '../../Controls/RendererControls'\r\nimport { useCallbackRef } from '../hooks/useCallbackRef'\r\nimport {\r\n\tDogDescriptionItem,\r\n\tFilterYOptions,\r\n\tFilterOptions,\r\n} from '../../../types/data'\r\n\r\nexport interface PixiBeeSwarmProps {\r\n\tdata: DogDescriptionItem[]\r\n\twidth: number\r\n\theight: number\r\n\tvpHeight: number\r\n\tvpWidth: number\r\n\tscales: ScaleProps\r\n\trenderer: Renderers\r\n\tyAxisFilter: FilterYOptions\r\n\txAxisFilter: FilterOptions\r\n}\r\n\r\nexport const PixiBeeSwarm: React.FC<PixiBeeSwarmProps> = memo(\r\n\tfunction PixiBeeSwarm({\r\n\t\tdata,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tvpWidth,\r\n\t\tvpHeight,\r\n\t\tscales,\r\n\t\trenderer,\r\n\t\tyAxisFilter,\r\n\t\txAxisFilter,\r\n\t}: PixiBeeSwarmProps) {\r\n\t\tconst tooltip = useRef<HTMLDivElement | null>(null)\r\n\t\tconst [setCanvasElement, canvasElement] = useCallbackRef<HTMLDivElement>()\r\n\t\tconst { xScale, yScale } = scales\r\n\r\n\t\t// setup pixi instance\r\n\t\tconst pixiInstance = usePixiInstance({\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\ttoolTipElement: tooltip.current,\r\n\t\t\tcontainerElement: canvasElement,\r\n\t\t\trenderer,\r\n\t\t\tyAxisFilter,\r\n\t\t\txAxisFilter,\r\n\t\t\tscales,\r\n\t\t})\r\n\t\t// update sprites with new data\r\n\t\tuseUpdatedData({ data, pixiInstance, yAxisFilter, xAxisFilter, renderer })\r\n\r\n\t\treturn (\r\n\t\t\t<ChartStyle>\r\n\t\t\t\t<BeeSwarmSVG\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\tvpHeight={vpHeight}\r\n\t\t\t\t\tvpWidth={vpWidth}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tscales={{ xScale, yScale }}\r\n\t\t\t\t/>\r\n\t\t\t\t<PixiElement ref={setCanvasElement} className=\"canvas-ref\" />\r\n\t\t\t\t<ToolTip ref={tooltip} className=\"tooltip-ref\" />\r\n\t\t\t</ChartStyle>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst ChartStyle = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: relative;\r\n`\r\n\r\nconst ToolTip = styled.div`\r\n\tz-index: 3;\r\n\tposition: absolute;\r\n\tvisibility: hidden;\r\n\tmax-width: 100px;\r\n`\r\nconst PixiElement = styled.div`\r\n\tz-index: 2;\r\n\tposition: absolute;\r\n`\r\n","import { useEffect } from 'react'\r\nimport {\r\n\tFilterOptions,\r\n\tFilterYOptions,\r\n\tDogDescriptionItem,\r\n} from '../../../../types/data'\r\nimport { Renderers } from '../../../Controls/RendererControls'\r\nimport PixiRenderer from '../PixiRenderer'\r\n\r\ninterface UpdateProps {\r\n\tdata: DogDescriptionItem[]\r\n\tpixiInstance: PixiRenderer | undefined\r\n\tyAxisFilter: FilterYOptions\r\n\txAxisFilter: FilterOptions\r\n\trenderer: Renderers\r\n}\r\nexport function useUpdatedData({\r\n\tdata,\r\n\tpixiInstance,\r\n\tyAxisFilter,\r\n\txAxisFilter,\r\n\trenderer,\r\n}: UpdateProps) {\r\n\tuseEffect(() => {\r\n\t\tif (pixiInstance && pixiInstance.getRendererType() === renderer) {\r\n\t\t\tpixiInstance.updateChart(data)\r\n\t\t}\r\n\t}, [data, pixiInstance, xAxisFilter, yAxisFilter, renderer])\r\n}\r\n","import { FilterYOptions, FilterOptions } from '../../../../types/data'\r\nimport { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport PixiRenderer from '../PixiRenderer'\r\nimport { Dimensions } from '../../../../utils/types'\r\nimport { Renderers } from '../../../Controls/RendererControls'\r\nimport { ScaleProps } from '../../types'\r\n\r\nexport interface PixiInstance {\r\n\tcontainerElement: HTMLDivElement | null\r\n\ttoolTipElement: HTMLDivElement | null\r\n\twidth: number\r\n\theight: number\r\n\trenderer: Renderers\r\n\tscales: ScaleProps\r\n\tyAxisFilter: FilterYOptions\r\n\txAxisFilter: FilterOptions\r\n}\r\n\r\nexport function usePixiInstance({\r\n\twidth,\r\n\theight,\r\n\ttoolTipElement,\r\n\tcontainerElement,\r\n\trenderer,\r\n\tscales,\r\n\tyAxisFilter,\r\n\txAxisFilter,\r\n}: // events,\r\nPixiInstance): PixiRenderer | undefined {\r\n\tconst [pixiInstance, setPixiInstance] = useState<PixiRenderer | undefined>()\r\n\r\n\t// resize canvas on dimension change\r\n\tconst dimensions: Dimensions = useMemo(() => {\r\n\t\tif (pixiInstance) {\r\n\t\t\tpixiInstance.resize(width, height)\r\n\t\t}\r\n\t\treturn { width, height }\r\n\t}, [width, height, pixiInstance])\r\n\r\n\t// update toolTipElement in PixiRenderer\r\n\tuseMemo(() => {\r\n\t\tif (pixiInstance && toolTipElement !== null) {\r\n\t\t\tpixiInstance.setTooltipElement(toolTipElement)\r\n\t\t}\r\n\t}, [toolTipElement, pixiInstance])\r\n\r\n\tconst filters = useMemo(() => ({ x: xAxisFilter, y: yAxisFilter }), [\r\n\t\txAxisFilter,\r\n\t\tyAxisFilter,\r\n\t])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (pixiInstance) {\r\n\t\t\tpixiInstance.setFilters(filters)\r\n\t\t}\r\n\t}, [filters, pixiInstance])\r\n\tuseEffect(() => {\r\n\t\tif (pixiInstance) {\r\n\t\t\tpixiInstance.setScales(scales)\r\n\t\t}\r\n\t}, [scales, pixiInstance])\r\n\r\n\tconst setUpPixi = useCallback(\r\n\t\t(instance?: PixiRenderer) => {\r\n\t\t\tif (!instance && containerElement !== null) {\r\n\t\t\t\tconst PIXIinstance = new PixiRenderer(\r\n\t\t\t\t\tcontainerElement,\r\n\t\t\t\t\ttoolTipElement,\r\n\t\t\t\t\tdimensions,\r\n\t\t\t\t\trenderer,\r\n\t\t\t\t\tfilters,\r\n\t\t\t\t\tscales,\r\n\t\t\t\t)\r\n\t\t\t\tsetPixiInstance(PIXIinstance)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[containerElement, toolTipElement, dimensions, renderer, scales, filters],\r\n\t)\r\n\tuseEffect(() => {\r\n\t\tif (pixiInstance) {\r\n\t\t\tconst currentRenderer = pixiInstance.getRendererType()\r\n\t\t\tif (currentRenderer !== renderer) {\r\n\t\t\t\tpixiInstance.remove()\r\n\t\t\t\tsetUpPixi()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetUpPixi(pixiInstance)\r\n\t\t}\r\n\t}, [pixiInstance, renderer, setUpPixi])\r\n\r\n\treturn pixiInstance\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useTooltipPositioner } from './useTooltipPositioner'\r\nimport { DogDescriptionItem } from '../../../../types/data'\r\nimport { getTooltipHtml } from '../../../../utils'\r\n\r\nexport function useHoverEvents(\r\n\ttooltip: HTMLDivElement | null,\r\n): [\r\n\t// onMouseEnter\r\n\t(d: DogDescriptionItem, coords: [number, number]) => void,\r\n\t// onMouseLeave\r\n\t() => void,\r\n] {\r\n\tconst showToolTip = useTooltipPositioner(tooltip)\r\n\r\n\tconst onMouseEnter = useCallback(\r\n\t\t(data: DogDescriptionItem, coords: [number, number]) => {\r\n\t\t\tif (tooltip) {\r\n\t\t\t\ttooltip.style.padding = `2px`\r\n\t\t\t\ttooltip.innerHTML = getTooltipHtml(data)\r\n\t\t\t\ttooltip.style.backgroundColor = '#f1f1f1'\r\n\t\t\t\ttooltip.style.border = `1px solid #767676`\r\n\t\t\t\ttooltip.style.color = 'black'\r\n\t\t\t\ttooltip.style.fontSize = '14px'\r\n\t\t\t\ttooltip.style.fontSize = '14px'\r\n\t\t\t\ttooltip.style.visibility = 'visible'\r\n\t\t\t\tshowToolTip(coords)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[tooltip, showToolTip],\r\n\t)\r\n\tconst onMouseLeave = useCallback(() => {\r\n\t\tif (tooltip) {\r\n\t\t\ttooltip.style.visibility = 'hidden'\r\n\t\t}\r\n\t}, [tooltip])\r\n\r\n\treturn [onMouseEnter, onMouseLeave]\r\n}\r\n","import { useCallback } from 'react'\r\n\r\n// updates the position of the tooltip and change visibility\r\nexport function useTooltipPositioner(\r\n\telement: HTMLDivElement | null,\r\n): (pos: [number, number]) => void {\r\n\treturn useCallback(\r\n\t\t(postion: [number, number]) => {\r\n\t\t\tif (postion && element) {\r\n\t\t\t\tconst xPos = postion[0]\r\n\t\t\t\tconst yPos = postion[1]\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\telement.style.left = `${xPos + 150}px`\r\n\t\t\t\t\telement.style.top = `${yPos - 10}px`\r\n\t\t\t\t\telement.style.visibility = 'visible'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t[element],\r\n\t)\r\n}\r\n","import { useCallback, useLayoutEffect } from 'react'\r\nimport { useSelectionOnNode } from '../../hooks/useSelectionOnNode'\r\nimport { Selection, select } from 'd3-selection'\r\nimport { transition } from 'd3-transition'\r\nimport { useHoverEvents } from './events'\r\nimport {\r\n\tDogDescriptionItem,\r\n\tFilterYOptions,\r\n\tFilterOptions,\r\n} from '../../../../types/data'\r\nimport { ScaleProps } from '../../types'\r\n\r\nconst t: any = transition().duration(1000)\r\nconst defaultRadius = 4\r\n\r\ninterface DrawCircles {\r\n\telement: SVGGElement | null\r\n\tdata: DogDescriptionItem[]\r\n\ttooltip: HTMLDivElement | null\r\n\tscales: ScaleProps\r\n\tyAxisFilter: FilterYOptions\r\n\txAxisFilter: FilterOptions\r\n}\r\nexport function useCircleDrawing({\r\n\telement,\r\n\tdata,\r\n\ttooltip,\r\n\tscales,\r\n\tyAxisFilter,\r\n\txAxisFilter,\r\n}: DrawCircles) {\r\n\tconst elementSelection = useSelectionOnNode<SVGGElement>(element)\r\n\tconst { xScale, yScale, colorScale } = scales\r\n\r\n\tconst [onCircleMouseover, onCircleMouseout] = useHoverEvents(tooltip)\r\n\tconst getXValue = useCallback(\r\n\t\t(d: DogDescriptionItem) => xScale(d[xAxisFilter]),\r\n\t\t[xAxisFilter, xScale],\r\n\t)\r\n\tconst getYValue = useCallback(\r\n\t\t(d: DogDescriptionItem) =>\r\n\t\t\t(yScale(d[yAxisFilter]) || 0) + yScale.bandwidth() / 2,\r\n\t\t[yScale, yAxisFilter],\r\n\t)\r\n\r\n\tconst getColor = useCallback(\r\n\t\t(d: DogDescriptionItem) => {\r\n\t\t\treturn colorScale ? colorScale(d[yAxisFilter]) : 'white'\r\n\t\t},\r\n\t\t[colorScale, yAxisFilter],\r\n\t)\r\n\r\n\tuseLayoutEffect(() => {\r\n\t\tif (elementSelection !== null && data.length > 0) {\r\n\t\t\telementSelection\r\n\t\t\t\t.selectAll('.dog-nodes')\r\n\t\t\t\t.data(data, (d: DogDescriptionItem) => d.petId)\r\n\t\t\t\t.join(\r\n\t\t\t\t\t(enter: Selection<any, any, any, any>) =>\r\n\t\t\t\t\t\tenter\r\n\t\t\t\t\t\t\t.append('circle')\r\n\t\t\t\t\t\t\t.attr('class', 'dog-nodes')\r\n\t\t\t\t\t\t\t.attr('cx', (d: DogDescriptionItem) => getXValue(d))\r\n\t\t\t\t\t\t\t.attr('cy', 0)\r\n\t\t\t\t\t\t\t.call((e: any) =>\r\n\t\t\t\t\t\t\t\te\r\n\t\t\t\t\t\t\t\t\t.interrupt()\r\n\t\t\t\t\t\t\t\t\t.transition(t as any)\r\n\t\t\t\t\t\t\t\t\t.attr('cy', (d: DogDescriptionItem) => getYValue(d))\r\n\t\t\t\t\t\t\t\t\t.attr('r', defaultRadius)\r\n\t\t\t\t\t\t\t\t\t.style('fill', (d: DogDescriptionItem) => getColor(d))\r\n\t\t\t\t\t\t\t\t\t.style('opacity', 0.8)\r\n\t\t\t\t\t\t\t\t\t.style('stroke-width', 1)\r\n\t\t\t\t\t\t\t\t\t.style('stroke', (d: DogDescriptionItem) => getColor(d))\r\n\t\t\t\t\t\t\t\t\t.attr('stroke-opacity', 1),\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t(update: Selection<any, any, any, any>) =>\r\n\t\t\t\t\t\tupdate.call((e: any) =>\r\n\t\t\t\t\t\t\te\r\n\t\t\t\t\t\t\t\t.interrupt()\r\n\t\t\t\t\t\t\t\t.transition(t as any)\r\n\t\t\t\t\t\t\t\t.style('fill', (d: DogDescriptionItem) => getColor(d))\r\n\t\t\t\t\t\t\t\t.attr('cx', (d: DogDescriptionItem) => getXValue(d))\r\n\t\t\t\t\t\t\t\t.attr('cy', (d: DogDescriptionItem) => getYValue(d))\r\n\t\t\t\t\t\t\t\t.style('stroke-width', 1)\r\n\t\t\t\t\t\t\t\t.style('stroke', (d: DogDescriptionItem) => getColor(d))\r\n\t\t\t\t\t\t\t\t.style('stroke-opacity', 1),\r\n\t\t\t\t\t\t),\r\n\r\n\t\t\t\t\t(exit: Selection<any, any, any, any>) =>\r\n\t\t\t\t\t\texit.call((e: any) => e.remove()),\r\n\t\t\t\t)\r\n\t\t\t\t.on('mouseover', function (d: DogDescriptionItem) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tselect(this)\r\n\t\t\t\t\t\t.attr('r', defaultRadius * 2)\r\n\t\t\t\t\t\t.attr('fill', '#2e78ce')\r\n\t\t\t\t\tconst x: number = getXValue(d)\r\n\t\t\t\t\tconst y: number = getYValue(d)\r\n\t\t\t\t\tconst coords = [x, y] as [number, number]\r\n\t\t\t\t\t// show tooltip\r\n\t\t\t\t\tonCircleMouseover(d, coords)\r\n\t\t\t\t})\r\n\t\t\t\t.on('mouseout', function (d: DogDescriptionItem) {\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tselect(this).attr('r', defaultRadius).attr('fill', getColor(d))\r\n\t\t\t\t\tonCircleMouseout()\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [\r\n\t\telementSelection,\r\n\t\tdata,\r\n\t\ttooltip,\r\n\t\tonCircleMouseout,\r\n\t\tonCircleMouseover,\r\n\t\tgetXValue,\r\n\t\tgetYValue,\r\n\t\tgetColor,\r\n\t])\r\n}\r\n","import { useMemo } from 'react'\r\nimport { select, BaseType, Selection } from 'd3-selection'\r\n\r\n/**\r\n * Creates a d3 selection over a node.\r\n * @HACK - the any return type prevents d3 typings issues, but shoul be resolved eventually\r\n * @param element The element to create the d3 selection over\r\n */\r\nexport function useSelectionOnNode<EType extends BaseType, Datum = unknown>(\r\n\telement: EType | null,\r\n): Selection<EType, Datum, null, undefined> | null | any {\r\n\treturn useMemo(() => (element ? select(element) : null), [element])\r\n}\r\n","import React, { memo } from 'react'\r\nimport { useCallbackRef } from '../hooks/useCallbackRef'\r\nimport { correctedMargins } from '../constants'\r\nimport { useResizeHandling } from '../hooks/useResizeHandling'\r\nimport {\r\n\tFilterYOptions,\r\n\tFilterOptions,\r\n\tDogDescriptionItem,\r\n} from '../../../types/data'\r\nimport { useCircleDrawing } from './hooks/draw'\r\nimport { ScaleProps } from '../types'\r\nimport { useXAxisTheming, useYAxisTheming } from '../hooks/axis'\r\n\r\nexport interface BeeSwarmContainerProps {\r\n\tdata: DogDescriptionItem[]\r\n\twidth: number\r\n\theight: number\r\n\tvpHeight: number\r\n\tvpWidth: number\r\n\tyAxisFilter: FilterYOptions\r\n\txAxisFilter: FilterOptions\r\n\ttooltip: HTMLDivElement | null\r\n\tscales: ScaleProps\r\n}\r\n\r\nexport const BeeSwarmContainer: React.FC<BeeSwarmContainerProps> = memo(\r\n\tfunction BeeSwarmContainer({\r\n\t\tdata,\r\n\t\twidth,\r\n\t\theight,\r\n\t\ttooltip,\r\n\t\tscales,\r\n\t\tvpHeight,\r\n\t\tvpWidth,\r\n\t\tyAxisFilter,\r\n\t\txAxisFilter,\r\n\t}: BeeSwarmContainerProps) {\r\n\t\t// Get Refs for SVG Elements\r\n\t\tconst [setSvgEl, svgElementRef] = useCallbackRef<SVGSVGElement>()\r\n\t\tconst [setXAxisElement, xAxisElement] = useCallbackRef<SVGGElement>()\r\n\t\tconst [setYAxisElement, yAxisElement] = useCallbackRef<SVGGElement>()\r\n\t\tconst [\r\n\t\t\tsetBeeSwarmContainerElement,\r\n\t\t\tBeeSwarmContainerElement,\r\n\t\t] = useCallbackRef<SVGGElement>()\r\n\r\n\t\tconst { xScale, yScale } = scales\r\n\r\n\t\t// Optional: Apply thematic D3 themes\r\n\t\tuseResizeHandling(svgElementRef, width, height)\r\n\r\n\t\t// Append Axis\r\n\t\tuseXAxisTheming(xAxisElement, vpHeight, xScale)\r\n\t\tuseYAxisTheming(yAxisElement, yScale)\r\n\r\n\t\tuseCircleDrawing({\r\n\t\t\telement: BeeSwarmContainerElement,\r\n\t\t\tdata,\r\n\t\t\ttooltip,\r\n\t\t\tscales,\r\n\t\t\tyAxisFilter,\r\n\t\t\txAxisFilter,\r\n\t\t})\r\n\r\n\t\t// === without animation ====\r\n\t\t// const circles = useMemo(() => {\r\n\t\t// \treturn data.map(d => {\r\n\t\t// \t\treturn (\r\n\t\t// \t\t\t<circle\r\n\t\t// \t\t\t\tcx={xScale(d[xAxisFilter])}\r\n\t\t// \t\t\t\tcy={(yScale(d[yAxisFilter]) || 0) + yScale.bandwidth() / 2}\r\n\t\t// \t\t\t\tfill={colorScale(d[yAxisFilter]).hex()}\r\n\t\t// \t\t\t\tr={2}\r\n\t\t// \t\t\t\tkey={d.id}\r\n\t\t// \t\t\t/>\r\n\t\t// \t\t)\r\n\t\t// \t})\r\n\t\t// }, [data, xScale, yScale, colorScale])\r\n\r\n\t\treturn (\r\n\t\t\t<div style={{ position: 'absolute', zIndex: 1 }}>\r\n\t\t\t\t<svg ref={setSvgEl} width={width} height={height}>\r\n\t\t\t\t\t<g\r\n\t\t\t\t\t\tclassName=\"viewport\"\r\n\t\t\t\t\t\ttransform={`translate(${correctedMargins.left},${correctedMargins.top})`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<g className=\"yscale\" ref={setYAxisElement}></g>\r\n\t\t\t\t\t\t<g className=\"xscale\" ref={setXAxisElement}></g>\r\n\t\t\t\t\t\t<g className=\"plotarea\" width={vpWidth} height={vpHeight}>\r\n\t\t\t\t\t\t\t{/* {circles} */}\r\n\t\t\t\t\t\t\t<g ref={setBeeSwarmContainerElement} className=\"beeswarm\"></g>\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t</g>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t)\r\n\t},\r\n)\r\n","import React, { memo, useRef } from 'react'\r\nimport {\r\n\tFilterYOptions,\r\n\tFilterOptions,\r\n\tDogDescriptionItem,\r\n} from '../../../types/data'\r\nimport { BeeSwarmContainer } from './BeeSwarmSVG'\r\nimport styled from 'styled-components'\r\nimport { ScaleProps } from '../types'\r\n\r\nexport interface SVGContainerProps {\r\n\tdata: DogDescriptionItem[]\r\n\twidth: number\r\n\theight: number\r\n\tvpHeight: number\r\n\tvpWidth: number\r\n\tyAxisFilter: FilterYOptions\r\n\txAxisFilter: FilterOptions\r\n\tscales: ScaleProps\r\n}\r\n\r\nexport const SVGBeeSwarm: React.FC<SVGContainerProps> = memo(\r\n\tfunction SVGBeeSwarm({\r\n\t\tdata,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tvpHeight,\r\n\t\tvpWidth,\r\n\t\tyAxisFilter,\r\n\t\txAxisFilter,\r\n\t\tscales,\r\n\t}: SVGContainerProps) {\r\n\t\tconst tooltip = useRef<HTMLDivElement | null>(null)\r\n\t\treturn (\r\n\t\t\t<ChartStyle>\r\n\t\t\t\t<BeeSwarmContainer\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tvpHeight={vpHeight}\r\n\t\t\t\t\tvpWidth={vpWidth}\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\tyAxisFilter={yAxisFilter}\r\n\t\t\t\t\txAxisFilter={xAxisFilter}\r\n\t\t\t\t\ttooltip={tooltip.current}\r\n\t\t\t\t\tscales={scales}\r\n\t\t\t\t/>\r\n\t\t\t\t<ToolTip ref={tooltip} className=\"tooltip-svg-ref\" />\r\n\t\t\t</ChartStyle>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst ChartStyle = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: relative;\r\n`\r\n\r\nconst ToolTip = styled.div`\r\n\tz-index: 3;\r\n\tposition: absolute;\r\n\tvisibility: hidden;\r\n`\r\n","import React, { memo, useMemo } from 'react'\r\nimport {\r\n\tFilterYOptions,\r\n\tDogDescriptionItem,\r\n\tFilterOptions,\r\n} from '../../types/data'\r\nimport styled from 'styled-components'\r\nimport { useXRange, useYRange } from './hooks/range'\r\nimport { useXScale, useYScale } from './hooks/scales'\r\nimport { useViewportDimensions } from './hooks/useViewportDimensions'\r\nimport { useColorizer } from './hooks/color'\r\nimport { PixiBeeSwarm } from './Pixi'\r\nimport { SVGBeeSwarm } from './SVG'\r\nimport { Renderers } from '../Controls/RendererControls/RendererControls'\r\n\r\nexport interface ChartContainerProps {\r\n\tdata: DogDescriptionItem[]\r\n\twidth: number\r\n\theight: number\r\n\tyAxisFilter: FilterYOptions\r\n\txAxisFilter: FilterOptions\r\n\tmaxXComputed: Date | number\r\n\tminXComputed: Date | number\r\n\trenderer: Renderers\r\n}\r\n\r\nexport const ChartContainer: React.FC<ChartContainerProps> = memo(\r\n\tfunction ChartContainer({\r\n\t\tdata,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tyAxisFilter,\r\n\t\txAxisFilter,\r\n\t\tmaxXComputed,\r\n\t\tminXComputed,\r\n\t\trenderer,\r\n\t}: ChartContainerProps) {\r\n\t\t// Move scale setup here to use for both SVG/WebGL implementation\r\n\t\tconst [vpWidth, vpHeight] = useViewportDimensions(width, height)\r\n\t\tconst [minX, maxX] = useXRange(maxXComputed, minXComputed)\r\n\t\tconst yRange = useYRange(yAxisFilter)\r\n\t\tconst xScale = useXScale([minX, maxX], vpWidth)\r\n\t\tconst yScale = useYScale(yRange, vpHeight)\r\n\t\tconst colorScale = useColorizer(yRange)\r\n\r\n\t\tconst chart = useMemo(() => {\r\n\t\t\treturn renderer === Renderers.SVG ? (\r\n\t\t\t\t<SVGBeeSwarm\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\tvpHeight={vpHeight}\r\n\t\t\t\t\tvpWidth={vpWidth}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tscales={{ xScale, yScale, colorScale }}\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\txAxisFilter={xAxisFilter}\r\n\t\t\t\t\tyAxisFilter={yAxisFilter}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<PixiBeeSwarm\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\tvpHeight={vpHeight}\r\n\t\t\t\t\tvpWidth={vpWidth}\r\n\t\t\t\t\theight={height}\r\n\t\t\t\t\tscales={{ xScale, yScale, colorScale }}\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\trenderer={renderer}\r\n\t\t\t\t\txAxisFilter={xAxisFilter}\r\n\t\t\t\t\tyAxisFilter={yAxisFilter}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t}, [\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tvpHeight,\r\n\t\t\tvpWidth,\r\n\t\t\txScale,\r\n\t\t\tyScale,\r\n\t\t\tcolorScale,\r\n\t\t\tdata,\r\n\t\t\trenderer,\r\n\t\t\txAxisFilter,\r\n\t\t\tyAxisFilter,\r\n\t\t])\r\n\t\treturn <ChartStyle>{chart}</ChartStyle>\r\n\t},\r\n)\r\n\r\nconst ChartStyle = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: relative;\r\n\tdisplay: inline-flex;\r\n`\r\n","import { useMemo } from 'react'\r\nimport {\r\n\tCoatYRange,\r\n\tGenderYRange,\r\n\tSizeYRange,\r\n\tFilterYOptions,\r\n} from '../../../types/data'\r\n\r\n// Get X Extent\r\nexport function useXRange(\r\n\tmaxXComputed: number | Date,\r\n\tminXComputed: number | Date,\r\n): [number | Date, number | Date] {\r\n\treturn useMemo(() => {\r\n\t\tif (typeof minXComputed === 'number') {\r\n\t\t\t// start at zero for numerical axis\r\n\t\t\treturn [0, maxXComputed as number]\r\n\t\t}\r\n\t\treturn [minXComputed, maxXComputed]\r\n\t}, [maxXComputed, minXComputed])\r\n}\r\n\r\n// Get Y Bands\r\nexport function useYRange(yFilter: FilterYOptions): string[] {\r\n\treturn useMemo(() => {\r\n\t\t// we could iterate over the data and get a set of all y values\r\n\t\t// but instead this is precomputed in types\r\n\t\tswitch (yFilter) {\r\n\t\t\tcase FilterYOptions.coat:\r\n\t\t\t\treturn CoatYRange\r\n\t\t\tcase FilterYOptions.gender:\r\n\t\t\t\treturn GenderYRange\r\n\t\t\tcase FilterYOptions.size:\r\n\t\t\t\treturn SizeYRange\r\n\t\t\tdefault:\r\n\t\t\t\treturn []\r\n\t\t}\r\n\t}, [yFilter])\r\n}\r\n","import { useMemo } from 'react'\r\nimport { correctedMargins } from '../constants'\r\n\r\nexport function useViewportDimensions(\r\n\twidth: number,\r\n\theight: number,\r\n): [number, number] {\r\n\tconst vpWidth = useMemo(\r\n\t\t() => width - correctedMargins.left - correctedMargins.right,\r\n\t\t[width],\r\n\t)\r\n\tconst vpHeight = useMemo(\r\n\t\t() => height - correctedMargins.top - correctedMargins.bottom,\r\n\t\t[height],\r\n\t)\r\n\treturn [vpWidth, vpHeight]\r\n}\r\n","import { useMemo } from 'react'\r\nimport {\r\n\tscaleLinear,\r\n\tScaleLinear,\r\n\tScaleBand,\r\n\tscaleBand,\r\n\tscaleTime,\r\n\tScaleTime,\r\n} from 'd3-scale'\r\nimport { correctedMargins } from '../constants'\r\n\r\nexport function useXScale(\r\n\t[min, max]: [number | Date, number | Date],\r\n\tvpWidth: number,\r\n): ScaleLinear<number, number> | ScaleTime<number, number> {\r\n\treturn useMemo(() => {\r\n\t\tif (typeof min === 'number' && typeof max === 'number') {\r\n\t\t\treturn scaleLinear().domain([min, max]).range([0, vpWidth])\r\n\t\t}\r\n\t\treturn scaleTime().domain([min, max]).range([0, vpWidth])\r\n\t}, [min, max, vpWidth])\r\n}\r\n\r\nexport function useYScale(\r\n\tyRange: string[],\r\n\tvpHeight: number,\r\n): ScaleBand<string> {\r\n\treturn useMemo(() => {\r\n\t\tconst yScale = scaleBand()\r\n\t\t\t.domain(yRange)\r\n\t\t\t.range([vpHeight, correctedMargins.top])\r\n\t\treturn yScale\r\n\t}, [vpHeight, yRange])\r\n}\r\n","import React, { memo, useCallback, useState } from 'react'\r\nimport { Page } from '../../common/styled'\r\nimport styled from 'styled-components'\r\nimport { useStateSelection } from '../../hooks/useStateSelection'\r\nimport { DogDescriptionItem } from '../../types/data'\r\nimport { useDataBounds } from '../../hooks/useDataBounds'\r\nimport { Header } from '../Header'\r\nimport { Footer } from '../Footer'\r\nimport { Controls } from '../Controls/Controls'\r\nimport { SizedToParent } from '../../utils/SizedToParent'\r\nimport { Dimensions } from '../../utils/types'\r\nimport { ChartContainer } from '../Chart'\r\nimport { useRendererSelection } from '../../hooks/UseRendererSelection'\r\nconst sizeStyles = { overflowY: 'hidden' } as React.CSSProperties\r\n\r\nexport interface VisualizePageProps {\r\n\tdata: DogDescriptionItem[]\r\n}\r\nexport const VisualizePage: React.FC<VisualizePageProps> = memo(\r\n\tfunction VisualizePage({ data }) {\r\n\t\t// get dimensions from ref\r\n\t\tconst [chartDimensions, setChartDimensions] = useState<\r\n\t\t\tDimensions | undefined\r\n\t\t>(undefined)\r\n\r\n\t\tconst handleResize = useCallback(\r\n\t\t\t({ width, height }) => {\r\n\t\t\t\tsetChartDimensions({ width, height })\r\n\t\t\t},\r\n\t\t\t[setChartDimensions],\r\n\t\t)\r\n\r\n\t\tconst [selectedRenderer, onRendererChange] = useRendererSelection()\r\n\t\t// handle events and selection for dropdown\r\n\t\tconst [\r\n\t\t\txAxisFilter,\r\n\t\t\tonXDropDrownChange,\r\n\t\t\tyAxisFilter,\r\n\t\t\tonYDropDrownChange,\r\n\t\t] = useStateSelection()\r\n\t\t// Map selected data values based on selections and get data bounds\r\n\t\tconst {\r\n\t\t\tchartData,\r\n\t\t\tselectedMax,\r\n\t\t\tsliderSettings,\r\n\t\t\tonSliderChange,\r\n\t\t\tmaxX,\r\n\t\t\tminX,\r\n\t\t} = useDataBounds(data, xAxisFilter)\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<Selections>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Controls\r\n\t\t\t\t\t\txAxisFilter={xAxisFilter}\r\n\t\t\t\t\t\tyAxisFilter={yAxisFilter}\r\n\t\t\t\t\t\tonSliderChange={onSliderChange}\r\n\t\t\t\t\t\tselectedMax={selectedMax}\r\n\t\t\t\t\t\tsliderSettings={sliderSettings}\r\n\t\t\t\t\t\tonXDropDrownChange={onXDropDrownChange}\r\n\t\t\t\t\t\tonYDropDrownChange={onYDropDrownChange}\r\n\t\t\t\t\t\tselectedRender={selectedRenderer}\r\n\t\t\t\t\t\tonRendererChange={onRendererChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Selections>\r\n\t\t\t\t<Chart>\r\n\t\t\t\t\t<SizedToParent style={sizeStyles} onResize={handleResize}>\r\n\t\t\t\t\t\t{chartDimensions ? (\r\n\t\t\t\t\t\t\t<ChartContainer\r\n\t\t\t\t\t\t\t\twidth={chartDimensions.width}\r\n\t\t\t\t\t\t\t\theight={chartDimensions.height}\r\n\t\t\t\t\t\t\t\tdata={chartData}\r\n\t\t\t\t\t\t\t\tyAxisFilter={yAxisFilter}\r\n\t\t\t\t\t\t\t\txAxisFilter={xAxisFilter}\r\n\t\t\t\t\t\t\t\tmaxXComputed={maxX}\r\n\t\t\t\t\t\t\t\tminXComputed={minX}\r\n\t\t\t\t\t\t\t\trenderer={selectedRenderer}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</SizedToParent>\r\n\t\t\t\t</Chart>\r\n\t\t\t\t<Footer />\r\n\t\t\t</Container>\r\n\t\t)\r\n\t},\r\n)\r\n\r\nconst Container = styled(Page)`\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tposition: relative;\r\n\tmax-height: 100%;\r\n\tmax-width: 100%;\r\n\tmin-height: 400px;\r\n`\r\nconst Chart = styled.div`\r\n\tposition: relative;\r\n\tflex: 1;\r\n`\r\nconst Selections = styled.div`\r\n\theight: 200px;\r\n\tposition: relative;\r\n`\r\n","import { useState, useCallback, FormEvent } from 'react'\r\nimport { IChoiceGroupOption } from '@fluentui/react'\r\nimport { Renderers } from '../components/Controls/RendererControls'\r\n\r\nexport function useRendererSelection(): [\r\n\tRenderers,\r\n\t(\r\n\t\tevent: FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n\t\toption?: IChoiceGroupOption,\r\n\t) => void,\r\n] {\r\n\tconst [selectedRenderer, setSelectedRenderer] = useState<Renderers>(\r\n\t\tRenderers.SVG,\r\n\t)\r\n\r\n\tconst onRendererChange = useCallback(\r\n\t\t(\r\n\t\t\tev: FormEvent<HTMLElement | HTMLInputElement> | undefined,\r\n\t\t\toption?: IChoiceGroupOption,\r\n\t\t) => {\r\n\t\t\tif (option) {\r\n\t\t\t\tsetSelectedRenderer(option.key as Renderers)\r\n\t\t\t}\r\n\t\t},\r\n\t\t[setSelectedRenderer],\r\n\t)\r\n\r\n\treturn [selectedRenderer, onRendererChange]\r\n}\r\n","import React, { memo } from 'react'\r\nimport styled from 'styled-components'\r\nimport VisualizePage from '../VisualizePage'\r\nimport { useDogData } from '../../hooks/useDogData'\r\n\r\nexport const IndexPage: React.FC = memo(function IndexPage() {\r\n\tconst data = useDogData()\r\n\treturn data ? (\r\n\t\t<Container>\r\n\t\t\t<VisualizePage data={data} />\r\n\t\t</Container>\r\n\t) : (\r\n\t\t<Loading>\r\n\t\t\t<iframe\r\n\t\t\t\tsrc=\"https://giphy.com/embed/gfl7CKcgs6exW\"\r\n\t\t\t\twidth=\"480\"\r\n\t\t\t\theight=\"384\"\r\n\t\t\t\tframeBorder=\"0\"\r\n\t\t\t\tclassName=\"giphy-embed\"\r\n\t\t\t\tallowFullScreen={false}\r\n\t\t\t\ttitle=\"talking dog\"\r\n\t\t\t></iframe>\r\n\t\t\t<h1>loading data... please hold ❤ ❤ ❤</h1>\r\n\t\t</Loading>\r\n\t)\r\n})\r\n\r\nexport default IndexPage\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex: 1;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tfont-family: 'Gaegu', cursive;\r\n`\r\nconst Loading = styled.div`\r\n\tposition: relative;\r\n\tdisplay: block;\r\n\tfont-family: 'Gaegu', cursive;\r\n\tmargin-left: 40%;\r\n\tmargin-top: 20%;\r\n`\r\n","import { useMemo, useState } from 'react'\r\nimport { csv } from 'd3-fetch'\r\nimport { DogDescriptionItem } from '../types/data'\r\nimport { generateRandomAge, generateImgSrc } from '../utils'\r\n// Data Gathered from\r\n// https://github.com/the-pudding/data/tree/master/dog-shelters\r\n// under MIT license\r\nconst url =\r\n\t'https://raw.githubusercontent.com/ahoak/data/master/dog-shelters/allDogDescriptions.csv'\r\n\r\nexport function useDogData(): DogDescriptionItem[] | undefined {\r\n\tconst [aggregatedDogData, setAggregatedDogData] = useState<\r\n\t\tDogDescriptionItem[] | undefined\r\n\t>()\r\n\r\n\tuseMemo(async () => {\r\n\t\tif (!aggregatedDogData) {\r\n\t\t\tconst parseData = await csv(url).then(function (data: any) {\r\n\t\t\t\tconst dogDescriptions = data.map((d: any) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tpetId: +d.id,\r\n\t\t\t\t\t\tposted: new Date(d.posted),\r\n\t\t\t\t\t\tage: generateRandomAge(d.age),\r\n\t\t\t\t\t\tgender: d.sex,\r\n\t\t\t\t\t\tsize: d.size,\r\n\t\t\t\t\t\tstate: d['contact_state'],\r\n\t\t\t\t\t\tcoat: d.coat || 'Unknown',\r\n\t\t\t\t\t\tname: d.name,\r\n\t\t\t\t\t\tadoptable: d.status === 'adoptable',\r\n\t\t\t\t\t\timgSrc: generateImgSrc(),\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn dogDescriptions\r\n\t\t\t})\r\n\t\t\tsetAggregatedDogData(parseData)\r\n\t\t}\r\n\t}, [aggregatedDogData])\r\n\treturn aggregatedDogData\r\n}\r\n","import { createTheme } from '@fluentui/react'\r\n\r\n// Yay pink!\r\nexport const pinkTheme = createTheme({\r\n\tdefaultFontStyle: { fontFamily: \"'Gaegu', cursive\", fontSize: '20px' },\r\n\tpalette: {\r\n\t\tthemePrimary: '#f683ba',\r\n\t\tthemeLighterAlt: '#0a0507',\r\n\t\tthemeLighter: '#27151e',\r\n\t\tthemeLight: '#492738',\r\n\t\tthemeTertiary: '#934e6f',\r\n\t\tthemeSecondary: '#d772a3',\r\n\t\tthemeDarkAlt: '#f68ec0',\r\n\t\tthemeDark: '#f79fca',\r\n\t\tthemeDarker: '#f9b8d7',\r\n\t\tneutralLighterAlt: '#000000',\r\n\t\tneutralLighter: '#000000',\r\n\t\tneutralLight: '#000000',\r\n\t\tneutralQuaternaryAlt: '#000000',\r\n\t\tneutralQuaternary: '#000000',\r\n\t\tneutralTertiaryAlt: '#b30474',\r\n\t\tneutralTertiary: '#c8c8c8',\r\n\t\tneutralSecondary: '#d0d0d0',\r\n\t\tneutralPrimaryAlt: '#dadada',\r\n\t\tneutralPrimary: '#ffffff',\r\n\t\tneutralDark: '#f4f4f4',\r\n\t\tblack: '#f8f8f8',\r\n\t\twhite: '#000000',\r\n\t},\r\n})\r\n","import React, { memo, StrictMode } from 'react'\r\nimport IndexPage from '../IndexPage'\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport './font.css'\r\nimport { loadTheme } from '@fluentui/react'\r\nimport { pinkTheme } from '../../common/theme'\r\nloadTheme(pinkTheme)\r\nconst App: React.FC = memo(function App() {\r\n\treturn (\r\n\t\t<StrictMode>\r\n\t\t\t<GlobalStyle />\r\n\t\t\t<IndexPage />\r\n\t\t</StrictMode>\r\n\t)\r\n})\r\nexport default App\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\thtml {\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tmax-height: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tdisplay: flex;\r\n\t}\r\n  body {\r\n\t\tdisplay: flex;\r\n\t\tflex: 1;\r\n\t\tmargin: 0;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\toverscroll-behavior: none;\r\n\t\tmax-height: 100%;\r\n\t\tmax-width: 100%;\r\n\t}\r\n\t#root {\r\n\t\tflex: 1;\r\n\t\tdisplay: flex;\r\n\t\tmax-height: 100%;\r\n\t\tmax-width: 100%;\r\n\t\theight: 100%;\r\n\t\twidth: 100%;\r\n\t\tbackground: black;\r\n\t\tcolor: white;\r\n\t}\r\n`\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App/App'\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}